@using System.Security.Claims

@inject MagikarpMayhem.Services.ArenaService ArenaService

@{
    var userId = User.Identity.IsAuthenticated ? int.Parse(User.FindFirst(ClaimTypes.NameIdentifier).Value) : (int?)null;
    var userArenaMembership = userId.HasValue ? await ArenaService.GetArenaOfUser(userId.Value) : null;
    Arena? joinedArena = null;
    if (userArenaMembership != null)
    {
        joinedArena = await ArenaService.GetArenaById(userArenaMembership.ArenaId);
    }

    var arenas = ArenaService.GetArenas().Result;
}


<div class="joined-arena-section">
    @if (userArenaMembership != null && joinedArena != null)
    {
        <div class="arena-item">
            <a asp-action="View" asp-route-id="@userArenaMembership.ArenaId">
                <p>arena.Name</p>
            </a>
        </div>
    }
    else
    {
        <div class="arena-item grayed-out">
            <p>Not a member of any arena</p>
        </div>
    }
</div>

<div class="arena-list">
    @foreach (var arena in arenas)
    {
        if (userArenaMembership == null || userArenaMembership.ArenaId != arena.Id)
        {
            <div class="arena-item">
                <a asp-action="View" asp-route-id="@arena.Id">
                    <p>@arena.Name</p>
                </a>
            </div>
        }
    }
</div>

<style>
    .grayed-out {
        opacity: 0.6;
    }
    
    .joined-arena-section {
        margin-bottom: 2rem;
        display: flex;
        justify-content: center;
        
        padding: 1rem;
    }
</style>