@using System.Security.Claims
@using MagikarpMayhem.Utils

@inject MagikarpMayhem.Services.ArenaService ArenaService

@{
    var userId = User.Identity.IsAuthenticated ? int.Parse(User.FindFirst(ClaimTypes.NameIdentifier).Value) : (int?)null;
    var userArenaMembership = userId.HasValue ? await ArenaService.GetArenaOfUser(userId.Value) : null;
    Arena? joinedArena = null;
    string? joinedArenaColor = null;
    var arenas = ArenaService.GetArenas().Result;
    var arenaColors = ColorUtil.GetRainbowColors(arenas.Count());
    if (userArenaMembership != null)
    {
        joinedArena = await ArenaService.GetArenaById(userArenaMembership.ArenaId);
        joinedArenaColor = arenaColors[arenas.ToList().IndexOf(joinedArena)];
    }
}


<div class="joined-arena-section">
    @if (userArenaMembership != null && joinedArena != null)
    {
        <p>Your arena:</p>
        <div class="arena-item">
            <partial name="Partials/_ArenaButton" model='new ArenaButtonModel { ArenaId = joinedArena.Id, ArenaName = joinedArena.Name, BackgroundColor = joinedArenaColor }'/>
        </div>
    }
    else
    {
        <div class="arena-item grayed-out">
            <p>Not a member of any arena</p>
        </div>
    }
</div>

<div class="arena-list">
    @for (int i = 0; i < arenas.Count(); i++)
    {
        var arena = arenas.ElementAt(i);
        if (userArenaMembership == null || userArenaMembership.ArenaId != arena.Id)
        {
            <div class="arena-item">
                <partial name="Partials/_ArenaButton" model='new ArenaButtonModel { ArenaId = arena.Id, ArenaName = arena.Name, BackgroundColor = arenaColors[i] }'/>
            </div>
        }
    }
</div>

<style>
    .grayed-out {
        opacity: 0.6;
    }
    
    .joined-arena-section {
        margin-bottom: 2rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        padding: 1rem;
    }
    
    .arena-list {
        display: flex;
        flex-direction: row;
        justify-content: center;
        flex-wrap: wrap;
    }
</style>